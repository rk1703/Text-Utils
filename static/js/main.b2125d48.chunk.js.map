{"version":3,"sources":["components/Navbar.js","components/About.js","components/Textforms.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","mode","navstyle","backgroundColor","className","style","to","type","id","homeactive","aboutactive","onClick","togglemode","htmlFor","btntext","About","Textforms","useState","text","setText","newtext","replace","trim","undefined","words","char","split","length","textoutstyle","color","textinstyle","rows","placeholder","value","onChange","event","console","log","target","toUpperCase","toLowerCase","App","Mode","setMode","setBtnText","window","location","pathname","isaboutactive","ishomeactive","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oNAGe,SAASA,EAAOC,GAC7B,GAAgB,SAAbA,EAAMC,KACP,IAAIC,EAAS,CACXC,gBAAgB,cAIlBD,EAAS,CACPC,gBAAgB,WAGlB,OACA,mCACE,qBAAKC,UAAS,yCAAoCJ,EAAMC,MAAQI,MAAOH,EAAvE,SACJ,sBAAKE,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,gBAAgBE,GAAG,IAAnC,uBACA,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAS,mBAAcJ,EAAMS,YAAc,eAAa,OAAOH,GAAG,IAAxE,oBAEF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAS,mBAAcJ,EAAMU,aAAeJ,GAAG,SAArD,wBAIJ,sBAAKF,UAAS,sCAA+C,UAAdJ,EAAMC,KAAiB,OAAS,SAA/E,UACI,uBAAOG,UAAU,mBAAmBO,QAASX,EAAMY,WAAYL,KAAK,WAAWC,GAAG,2BAClF,uBAAOJ,UAAU,mBAAmBS,QAAQ,yBAA5C,SAAsEb,EAAMc,uBChCvE,SAASC,IACpB,OACI,mCACI,qBAAKX,UAAU,iBAAf,SAEI,2DCHD,SAASY,EAAUhB,GAC9B,MAAqBiB,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KA6BMC,EAAQF,EAAKG,QAAQ,OAAQ,KAAKC,OACtC,QAAaC,IAAVL,EAAK,GACP,IAAIM,EAAM,EACNC,EAAK,OAGTD,EAAQJ,EAAQM,MAAM,KAAKC,OAC3BF,EAAOL,EAAQO,OAASH,EAAQ,EAGjC,GAAgB,SAAbxB,EAAMC,KACR,IAAI2B,EAAa,CACdzB,gBAAgB,UAChB0B,MAAM,WAELC,EAAY,CACb3B,gBAAgB,UAChB0B,MAAM,cAIPD,EAAa,CACXzB,gBAAgB,YAChB0B,MAAM,SAERC,EAAY,CACV3B,gBAAgB,QAChB0B,MAAM,SAKf,OACE,mCACE,sBAAKzB,UAAU,qCAAqCC,MAAOuB,EAA3D,UACE,uBAAOf,QAAQ,8BAA8BT,UAAU,aAAvD,SACE,0DAEF,0BACEA,UAAU,eACVI,GAAG,8BACHuB,KAAK,KACLC,YAAY,kBACZC,MAAOf,EACPgB,SAxEe,SAACC,GAClBC,QAAQC,IAAI,YACZlB,EAAQgB,EAAMG,OAAOL,QAuEnB5B,MAAOyB,IAET,8BAAIN,EAAJ,cAAsBC,EAAtB,iBACA,sBAAKrB,UAAU,iBAAf,UACA,wBAAQA,UAAU,4BAA4BO,QAxE9B,WAChByB,QAAQC,IAAI,aACZ,IAAIjB,EAAQF,EAAKqB,cACjBpB,EAAQC,IAqER,mCACA,wBAAQhB,UAAU,4BAA4BO,QAnE5B,WAClByB,QAAQC,IAAI,eACZ,IAAIjB,EAAQF,EAAKsB,cACjBrB,EAAQC,IAgER,mCACA,wBAAQhB,UAAU,8BAA8BO,QAxD7B,WACrB,IAAIS,EAAQF,EAAKG,QAAQ,OAAQ,KAAKC,OACtCH,EAAQC,IAsDN,gCACA,wBAAQhB,UAAU,4BAA4BO,QA/D3B,WACnByB,QAAQC,IAAI,gBAEZlB,EADY,KA6DZ,2B,WCnCOsB,MA3Cf,WACC,MAAsBxB,mBAAS,SAA/B,mBAAOyB,EAAP,KAAYC,EAAZ,KACA,EAA4B1B,mBAAS,mBAArC,mBAAOH,EAAP,KAAe8B,EAAf,KAcA,GAA8B,WAA3BC,OAAOC,SAASC,SACjB,IAAIC,EAAc,SACdC,EAAa,OAGiB,MAA3BJ,OAAOC,SAASC,WACtBC,EAAc,GACdC,EAAa,UAGf,OACE,mCACE,eAAC,IAAD,WACE,cAAClD,EAAD,CAAQE,KAAMyC,EAAM9B,WA1BR,WACP,UAAP8B,GACDC,EAAQ,QACRC,EAAW,oBACXM,SAASC,KAAK9C,MAAMF,gBAAgB,YAGnCwC,EAAQ,SACRC,EAAW,mBACXM,SAASC,KAAK9C,MAAMF,gBAAgB,UAiBUW,QAASA,EAASL,WAAYwC,EAAcvC,YAAasC,IACrG,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,SAAlB,SACE,cAACtC,EAAD,MAEF,cAAC,IAAD,CAAOsC,KAAK,IAAZ,SACE,cAACrC,EAAD,CAAWf,KAAMyC,eC/BdY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,M","file":"static/js/main.b2125d48.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  if(props.mode==='dark'){\r\n    var navstyle={\r\n      backgroundColor:'black'\r\n    }\r\n  } \r\n  else{\r\n    navstyle={\r\n      backgroundColor:'#9eaae6' \r\n    }\r\n  }\r\n    return (\r\n    <>  \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={navstyle}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand \" to=\"/\">TextUtils</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${props.homeactive}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${props.aboutactive}`} to=\"/about\">About</Link>\r\n        </li>\r\n     </ul>\r\n\r\n      <div className={`form-check form-switch text-${props.mode=== 'light'? 'Dark' : 'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.btntext}</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n      \r\n    </>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <>\r\n            <div className=\"container my-4\">\r\n                \r\n                <p>hello it is about page</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import React,{useState} from \"react\";\r\n\r\n\r\n\r\nexport default function Textforms(props) {\r\n    const [text,setText]=useState('');\r\n    const handleOnChange=(event)=>{\r\n        console.log('onchange');\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleUpClick=()=>{\r\n        console.log('upclicked');\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n    };\r\n  \r\n    const handleDownClick=()=>{\r\n        console.log('downclicked');\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext);\r\n    };\r\n\r\n    const handleEraseClick=()=>{\r\n        console.log('eraseclicked');\r\n        let newtext='';\r\n        setText(newtext);\r\n    };\r\n\r\n    const handleClearClick=()=>{\r\n      let newtext=text.replace(/\\s+/g, ' ').trim()\r\n      setText(newtext);\r\n    };\r\n    \r\n      let newtext=text.replace(/\\s+/g, ' ').trim();\r\n      if(text[0]===undefined){\r\n       var words=0;\r\n       var char=0;\r\n      }\r\n      else{\r\n       words = newtext.split(\" \").length;\r\n       char = newtext.length - words + 1;\r\n      }\r\n\r\n      if(props.mode==='dark'){\r\n       var textoutstyle={\r\n          backgroundColor:'#151f2d',\r\n          color:'#c8c8d4'\r\n        };\r\n       var textinstyle={\r\n          backgroundColor:'#000000',\r\n          color:'white'\r\n        };\r\n      }\r\n      else{\r\n         textoutstyle={\r\n           backgroundColor:'#65c7c752',\r\n           color:'black'\r\n         };\r\n         textinstyle={\r\n           backgroundColor:'white',\r\n           color:'black'\r\n         };\r\n\r\n      }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 container mt-4 pb-2 rounded-3\" style={textoutstyle}>\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          <h2>Enter Your Text Here -</h2>\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"10\"\r\n          placeholder='ENTER TEXT HERE'\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={textinstyle}\r\n        ></textarea>\r\n        <p>{words} words and {char} characters</p>\r\n        <div className=\"container my-2\">\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To Upper Case</button>\r\n        <button className=\"btn btn-success mx-1 my-1\" onClick={handleDownClick}>Convert To Lower Case</button>\r\n        <button className=\"btn btn-secondary mx-1 my-1\" onClick={handleClearClick}>Clear Extra Spaces</button>\r\n        <button className=\"btn btn-warning mx-1 my-1\" onClick={handleEraseClick}>Erase</button>\r\n        </div>\r\n            \r\n      </div>\r\n    </>\r\n  );\r\n}","// import \"./App.css\";\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\nimport Textforms from \"./components/Textforms\";\nimport React,{useState} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n const [Mode,setMode] =useState('light');\n const [btntext,setBtnText] =useState('Enable DarkMode')\n const togglemode = ()=>{\n   if(Mode==='light'){\n     setMode('dark');\n     setBtnText('Enable LightMode');\n     document.body.style.backgroundColor='#063956';\n    }\n    else {\n      setMode('light');\n      setBtnText('Enable DarkMode');\n      document.body.style.backgroundColor='white';\n   }\n };\n\n if(window.location.pathname==='/about'){\n   var isaboutactive='active';\n   var ishomeactive='';\n   \n  }\n  else if(window.location.pathname==='/'){\n    isaboutactive='';\n    ishomeactive='active';\n}\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={Mode} togglemode={togglemode} btntext={btntext} homeactive={ishomeactive} aboutactive={isaboutactive}/>\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Textforms mode={Mode}/>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}